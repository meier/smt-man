smt-id(1) -- an identification tool
====

## SYNOPSIS

`smt-id` [OMS SOURCE, SEARCH STRING] [OPTIONS <args>]

## DESCRIPTION

This SMT command performs a limited search through the `OMS` data to find objects that match the `SEARCH STRING`.  Typically the search string is a name, guid, lid, mlid, or pkey.  Multiple results can be returned.  This command is often useful for identifying an object from messages in a log file, but is also good for translating between guids and lids.

Many `SMT` commands require guid or lid arguments, and this tool can help discover and provide this piece of information.

## OMS SOURCE

Most SMT commands require one or more snapshots of the data provided by the OpenSM Monitoring Service (**OMS**).  These data snapshots can be provided directly (<Online>) via a connection to the OpenSM Monitoring Service, or in a post-mortem (<Offline>) fashion by using an OMS history file.

###Online
  The OMS runs on the same host as OpenSM (the subnet manager for infiniband).  In order for the command to connect to the service it normally needs to know the port number the service is hosted on, as well as the name of the host itself.  These can be specified with;

  * `-h`, `--host`[=HOST]:
  Specifies the name of the OpenSM host where OMS runs.  HOST is either the fully qualified name of the host node, or can be *localhost*.  If not specified, *localhost* is assumed.

  * `-pn`, `--portn`[=PORT]:
  Specifies the port number for the service.  PORT should normally be the default value of *10011*, unless service has been configured otherwise, or unless some sort of port forwarding mechanism is being used.  If not specified, *10011* is assumed.

###Offline
  Most SMT commands, like this one, can use an OMS history file instead of directly connecting to the service.  The history file (commonly refered to as the *flight recorder* file) is obtained via the *smt-record(1)* command.  The file is specified with;

  * `-rH`, `--readOMSHistory`=[FILE]:
  Specifies the OMS history file to use with this command.  FILE is a normal (absolute or relative) filename.  Additionally, the special characters **%h** and **%t** can be used to specify the users' home or temp directory, respectively.

## SEARCH STRING

Elements within the fabric can be uniquely identified with keys, descriptions, lids, and guids.  Many SMT commands can operate on a single element, and therefore need some form of identifier.  The SMT commands support some (but not all) of the common ways to identify elements.
### guid
A `guid` is a globally unique identifier, and is 64 bit number.  It can be expressed in many ways, and the SMT commands support two different ways of expressing a `guid`.

  * `big integer`:
  The guid is expressed as a base-10 integer.  A valid guid would look something like: `12345698`
  * `hexidecimal`:
  The guid is expressed in 4 groups of 16 bit hexidecimal numbers.  These groups must be seperated by a colon, so a valid guid would look something like: `0006:6a00:e900:131e`

### lid or key
Numbers are often used to identify elements within the context of a 'type' of element.  They can be refered to as 'keys' or 'local ids'.  SMT supports expressing numbers as normal base-10 integers, or as hexidecimal.  Hexidecimal numbers `must` be preceeded with `0x`.
### name
Strings are used to decribe or name an element.  The SMT commands currently only supports the use of `names` to identify a `node`.

## OPTIONS
### Generic SMT Options
  * `-?`, `--Help`:
  provides an abbreviated form of help

  * `-lf`, `--logFile`=[FILE]:
  the filename for holding this commands' log messages

  * `-ll`, `--logLevel`=[LEVEL]:
  the verbosity of the logging, where LEVEL is SEVERE, WARNING, INFO, CONFIG, FINE, FINER, or ALL.

  * `-rC`, `--readConfig`=[FILE]:
  reads the specified configuration file.  The configuration file typically holds a users' default setting for things like the logLevel.  Refer to the *smt-config(1)* command.

  * `-v`, `--version`:
  prints the version of the SMT command

## EXAMPLES

  * `smt-id`:
  when used without any arguments at all, this command will use the default localhost port 10011 to return the `OMS` server information, and is identical to the no argument form of `smt-server`.

  * `smt-id 1233 -pn 10013`:
  returns information (if found) for any object that matches `1233` using the `OMS` data from port 10013.  Most likely, this is a lid, and if found, node and/or port information would be displayed.

  * `smt-id -rH surface3.his -sr 0006:6a00:e300:43e7`:
  returns information (if found) for any object that matches the guid using the `OMS` data within the file.

  * `smt-id.sh ibcore2 L108`:
  returns information (if found) for a node with a name or description that matches `ibcore2 L108`.

  * `smt-id -pn 10017 0xc003`:
  returns information (if found) for any object that matches this hex value, probably an mlid or lid.

## AUTHOR

Tim Meier <meier3@llnl.gov>

## COPYRIGHT

Copyright (c) 2018, Lawrence Livermore National Security, LLC.
  Produced at the Lawrence Livermore National Laboratory.
  All rights reserved.
  LLNL-CODE-673346

## SEE ALSO

SMT(7), OMS(7), OsmJniPi(8), smt(1), smt-record(1), smt-server(1), smt-node(1), smt-port(1), smt-link(1), smt-multicast(1), smt-partition(1)

[opensm-smt](https://github.com/meier/opensm-smt) on GitHub

