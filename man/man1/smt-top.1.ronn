smt-top(1) -- displays most active nodes, ports, or links
====

## SYNOPSIS

`smt-top` [OMS SOURCE] [-lE | -lT | -nE | -nT | -pE | -pT] [OPTIONS <args>]

## DESCRIPTION

This SMT command provides a dynamic view of the activity in the fabric.  It uses two snapshots of the `OMS` data (as provided by the OMS SOURCE) to detect changes, calculate rates, sort, and then displays the desired attribute starting with the largest.  Traffic or Errors can be displayed, and they can be organized by node, port, or link.

## OMS SOURCE

Most SMT commands require one or more snapshots of the data provided by the OpenSM Monitoring Service (**OMS**).  These data snapshots can be provided directly (<Online>) via a connection to the OpenSM Monitoring Service, or in a post-mortem (<Offline>) fashion by using an OMS history file.

###Online
  The OMS runs on the same host as OpenSM (the subnet manager for infiniband).  In order for the command to connect to the service it normally needs to know the port number the service is hosted on, as well as the name of the host itself.  These can be specified with;

  * `-h`, `--host`=[HOST]:
  Specifies the name of the OpenSM host where OMS runs.  HOST is either the fully qualified name of the host node, or can be *localhost*.  If not specified, *localhost* is assumed.

  * `-pn`, `--portn`=[PORT]:
  Specifies the port number for the service.  PORT should normally be the default value of *10011*, unless service has been configured otherwise, or unless some sort of port forwarding mechanism is being used.  If not specified, *10011* is assumed.

###Offline
  Most SMT commands, like this one, can use an OMS history file instead of directly connecting to the service.  The history file (commonly refered to as the *flight recorder* file) is obtained via the *smt-record(1)* command.  The file is specified with;

  * `-rH`, `--readOMSHistory`=[FILE]:
  Specifies the OMS history file to use with this command.  FILE is a normal (absolute or relative) filename.  Additionally, the special characters **%h** and **%t** can be used to specify the users' home or temp directory, respectively.

## OVERVIEW

One of six different dynamic pieces of information can be monitored; node traffic (-nT), node errors (-nE), port traffic (-pT), port errors (-pE), link traffic (-lT), and link errors (-lE).  Only one of these can be specified, and if nothing is speciied, node traffic will be assumed.

The desired dynamic information is displayed starting with the largest on the first line, and proceeding on subsequent lines in decreasing order.  The number of lines is configurable, and if not specified is 20.  In small fabrics, and for certain attributes, there may not be enough information for 20 lines.  A fabric may not have 20 link errors for instance, and in that case the full list is displayed.  Finally, the amount of information displayed can be limited by using a simple black (reject) and white (accept) filter.  This is useful for restricting the output to only a small set of nodes, for example.

The dynamic nature of the monitored attributes is determined by comparing two successive instances or snapshots of the OMS data.  Since each snapshot has its own timestamp, the period between the two sets of data is known, and the rate of change can thereforth be calculated.

The behavior of this command depends upon the `OMS SOURCE`, whether it is `Online` or `Offline`, and the update rate of the data.  This command has limited interactive capabilities for watching the dynamic display of information.  These options are described below, but the over-arching characteristic which dictates how this command behaves is how fast the `NEXT` snapshot of OMS data becomes available.  Since change can only be calculated when new data is available, this command has to wait for it before updating the display.  This means that when using `Online` mode, updates can occur slowly (the sweep rate of the Performance Manager).  Conversely, updates can happen quickly in `Offline` mode because the entire collection of `OMS` snapshots are available in the history file.

* `Online` startup time can be quick, or very slow, depending upon when the next `OMS` snapshot becomes available.

### Once, Continuous, Playback
  This command can optionally be used to display just one list of "top" attributes.  By specifying the `-once` option in either `Online` or `Offline` mode, a single top calculation will be performed and displayed, and the command will exit, returning command line control.

  This command normally "continuously" updates the "top" information it displays, similar to the linux `top` command.  The terminal, or command line, is controlled by the tool so that new information can be continuously displayed.  To `exit` this continuous mode, use 'Ctrl-c'.

  A graphical control, in the form of a horizontal slider, is available when using the `Offline` mode of operation.  The `--playControl` option displays the "top" information as normal, but also provides a set of gui controls for controlling the speed of playing back the collection of `OMS` snapshots in the history file.  It allows playing and pausing the data, as well as controlling the speed once the data is in play mode.  You can also have the data `-wrap` around to the start, when the end of the data set is reached.  This options should only be selected if your system is capable of displaying graphic user interfaces.  To `exit` this playback mode, close the play control, or use 'Ctrl-c'.

### Filter

A simple filter can be used to restrict the "top" results. This is a useful capability when the dynamic activity of only a small subset of the fabric is desired. Perhaps the activity of a single node needs to be monitored, and there is no interest in the remainder of the fabric. This can be easily achieved by using this simple black and white filter.

The filter is described in a file which uses four special characters; `$`, `*`, `@`, and `#`. They must be placed at the beginning of a new line.

  * `$ <Filter Name>`:
  When placed at the beginning of a new line, this optional attribute gives the filter a name.  It should be unique, but its existence or uniquesness does not affect the filters functionality.  It is simply a `tag` or reference to help identify the filter.

  * `* White`:
  When placed at the beginning of a new line, this directive indicates that all lines following this line will contain strings that should be white listed. If the white list is empty, all strings are permitted. If the white list is populated, then `ONLY` strings contained in the white list will pass through the filter.

  * `* Black`:
  When placed at the beginning of a new line, this directive indicates that all lines following this line will contain strings that should be black listed. If the black list is empty, all strings are permitted. If the black list is populated, then strings contained in the black list will be excluded, or filtered.

  * `@ <Filename>`:
  When placed at the beginning of a new line, with a valid filename, the contents of the file is used to add filter directives. This is useful for building complex filters from a collection of smaller or simple filters.

  * `# <Comment>`:
  When placed at the beginning of a new line, the line will be ignored, and any text will be considered a comment.

## OPTIONS
### Generic SMT Options
  * `-?`, `--Help`:
  provides an abbreviated form of help

  * `-lf`, `--logFile`=[FILE]:
  the filename for holding this commands' log messages

  * `-ll`, `--logLevel`=[LEVEL]:
  the verbosity of the logging, where LEVEL is SEVERE, WARNING, INFO, CONFIG, FINE, FINER, or ALL.

  * `-rC`, `--readConfig`=[FILE]:
  reads the specified configuration file.  The configuration file typically holds a users' default setting for things like the logLevel.  Refer to the *smt-config(1)* command.

  * `-v`, `--version`:
  prints the version of the SMT command

### Command Options
  * `-filter`, `--filter`=[FILE]:
  use the provided filter file to limit the "top" results

  * `-lE`, `--linkErrors`=<# lines>:
  display the "top" link errors, and limit the results to the number of lines specified

  * `-lT`, `--linkTraffic`=<# lines>:
  display the links with the "top" traffic, and limit the results to the number of lines specified

  * `-nE`, `--nodeErrors`=<# lines>:
  display the "top" node errors, and limit the results to the number of lines specified

  * `-nT`, `--nodeTraffic`=<# lines>:
  display the nodes with the "top" traffic, and limit the results to the number of lines specified

  * `-once`, `--once`:
  instead of continuously updating the "top" results, just provide a single result and stop.

  * `-pControl`, `--playControl`:
  when using `Offline` mode, provide a graphical horizontal slider for controlling playback of the `OMS` snapshots from the file.

  * `-pE`, `--portErrors`=<# lines>:
  display the "top" port errors, and limit the results to the number of lines specified

  * `-pT`, `--portTraffic`=<# lines>:
  display the ports with the "top" traffic, and limit the results to the number of lines specified

  * `-pX`, `--playX`=<# times faster>:
  when using `Offline` mode, directs the collection of `OMS` snapshots from the file to arrive this many times faster than normal.

  * `-wrap`, `--wrap`=<t|f>:
  when using `Offline` mode, directs the playback of the `OMS` snapshots to restart at the beginning when the end is reached (if true), or to simple stop (if false). By default, playback will stop when the end of the collection of snapshots is reached. The command will not exit in either condition, so if it has reached the end of the snapshots it will just continually update the same "top" information.

## EXAMPLES

  * `smt-top -pn 10011`:
  continuously display the "top" 20 traffic nodes using the `Online` mode via port 10011

  * `smt-top -rH myHour.his -pX 10 -wrap t -lE 10`:
  using the history file, replay the data back at 10 times normal speed, and wrap around to the beginning when the end is reached. Display at most 10 lines of the "top" links with errors.

  * `smt-top -pn 10013 -once -filter CabFilter.flt -pT 10`:
  display the "top" 10 ports with traffic that pass through the filter, using the `OMS` on 10013. Display once, and exit.

  * `smt-top -rH myHour.his -pX 18 -pControl -nE 15`:
  using the history file, replay the data back at 18 times normal speed, and display, at most, the "top" 15 nodes with errors. Also, provide the play control gui for interactive control.

## AUTHOR

Tim Meier <meier3@llnl.gov>

## COPYRIGHT

Copyright (c) 2016, Lawrence Livermore National Security, LLC.
  Produced at the Lawrence Livermore National Laboratory.
  All rights reserved.
  LLNL-CODE-673346

## SEE ALSO

SMT(7), OMS(7), OsmJniPi(8), smt(1), smt-record(1), smt-utilize(1), smt-node(1), smt-port(1), smt-link(1)

[opensm-smt](https://github.com/meier/opensm-smt) on GitHub

