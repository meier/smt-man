smt-gui(1) -- a graphical tool for investigation, discovery, and exploration of Infiniband fabrics 
====

## SYNOPSIS

`smt-gui` [OMS SOURCE] [OPTIONS <args>]

## DESCRIPTION

This SMT command is a gui application that attempts to expose as much information about an infiniband fabric in an accessable way.  Each of the various command line tools within `SMT` are tailored to expose a specific part of the fabric.  If you want to explore many different areas using the commands, you need to invoke the commands seperately, causing the each command to individually re-establish a connection to the `OMS SOURCE`.  The `smt-gui` aggregates the functionality of all the individual commands into a single environment, where they can share the collection of `OMS` snapshots (regardless of the source).  This drastically improves performance, and enhances the "analysis" environment by making the data instantly available.

Although primitive, the `smt-gui` contains its own help system for describing its use, features, and limitations.

## OMS SOURCE

Most SMT commands require one or more snapshots of the data provided by the OpenSM Monitoring Service (**OMS**).  These data snapshots can be provided directly (<Online>) via a connection to the OpenSM Monitoring Service, or in a post-mortem (<Offline>) fashion by using an OMS history file.

###Online
  The OMS runs on the same host as OpenSM (the subnet manager for infiniband).  In order for the command to connect to the service it normally needs to know the port number the service is hosted on, as well as the name of the host itself.  These can be specified with;

  * `-h`, `--host`=[HOST]:
  Specifies the name of the OpenSM host where OMS runs.  HOST is either the fully qualified name of the host node, or can be *localhost*.  If not specified, *localhost* is assumed.

  * `-pn`, `--portn`=[PORT]:
  Specifies the port number for the service.  PORT should normally be the default value of *10011*, unless service has been configured otherwise, or unless some sort of port forwarding mechanism is being used.  If not specified, *10011* is assumed.

###Offline
  Most SMT commands, like this one, can use an OMS history file instead of directly connecting to the service.  The history file (commonly refered to as the *flight recorder* file) is obtained via the *smt-record(1)* command.  The file is specified with;

  * `-rH`, `--readOMSHistory`=[FILE]:
  Specifies the OMS history file to use with this command.  FILE is a normal (absolute or relative) filename.  Additionally, the special characters **%h** and **%t** can be used to specify the users' home or temp directory, respectively.

## OPTIONS
### Generic SMT Options
  * `-?`, `--Help`:
  provides an abbreviated form of help

  * `-lf`, `--logFile`=[FILE]:
  the filename for holding this commands' log messages

  * `-ll`, `--logLevel`=[LEVEL]:
  the verbosity of the logging, where LEVEL is SEVERE, WARNING, INFO, CONFIG, FINE, FINER, or ALL.

  * `-rC`, `--readConfig`=[FILE]:
  reads the specified configuration file.  The configuration file typically holds a users' default setting for things like the logLevel.  Refer to the *smt-config(1)* command.

  * `-v`, `--version`:
  prints the version of the SMT command

## EXAMPLES

The `smt-gui` really only needs to have a source of `OMS` data, either by directly connecting to the service, or from a history file.  All other options or ways to modify or configure the gui can be accomplished within the application itself.  Most of the configuration changes made from within the application are persisted, and used the next time the gui is invoked.

  * `smt-gui -pn 10013`:
  start the gui by connecting to the OpenSM Monitoring Service on `localhost` port `10013`

  * `smt-gui -rH bigFabic.his`:
  start the gui using the history file.

  * `smt-gui`:
  start the gui using the default or persisted source of `OMS` data.

  * `smt-gui -h opensmNode.edu -pn 10020`:
  start the gui by connecting to the `opensmNode.edu` host on port `10020`

## AUTHOR

Tim Meier <meier3@llnl.gov>

## COPYRIGHT

Copyright (c) 2016, Lawrence Livermore National Security, LLC.
  Produced at the Lawrence Livermore National Laboratory.
  All rights reserved.
  LLNL-CODE-673346

## SEE ALSO

SMT(7), OMS(7), OsmJniPi(8), smt(1), smt-record(1), smt-server(1), smt-console(1), smt-help(1)

[opensm-smt](https://github.com/meier/opensm-smt) on GitHub

